From f0e3a698418bc3368587badbb7f5970e05594c01 Mon Sep 17 00:00:00 2001
From: Stefan Berger <stefanb@linux.vnet.ibm.com>
Date: Mon, 30 Apr 2018 06:51:17 -0400
Subject: [PATCH 11/20] ima: Set IMA_MEASURED flag using set_iint_flags

Set the IMA_MEASURED flag using the set_iint_flags() function. This prepares
the flag for moving it into the ns_status structure.

Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
---
 security/integrity/ima/ima.h      | 3 ++-
 security/integrity/ima/ima_api.c  | 6 ++++--
 security/integrity/ima/ima_main.c | 2 +-
 3 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/security/integrity/ima/ima.h b/security/integrity/ima/ima.h
index 07e000166862..b06fc7eea6f4 100644
--- a/security/integrity/ima/ima.h
+++ b/security/integrity/ima/ima.h
@@ -337,7 +337,8 @@ void ima_store_measurement(struct ima_namespace *ns,
 			   const unsigned char *filename,
 			   struct evm_ima_xattr_data *xattr_value,
 			   int xattr_len, const struct modsig *modsig, int pcr,
-			   struct ima_template_desc *template_desc);
+			   struct ima_template_desc *template_desc,
+			   struct ns_status *status);
 int process_buffer_measurement(struct ima_namespace *ns,
 			       struct user_namespace *mnt_userns,
 			       struct inode *inode, const void *buf, int size,
diff --git a/security/integrity/ima/ima_api.c b/security/integrity/ima/ima_api.c
index eb7a3de6464c..e9baf141c442 100644
--- a/security/integrity/ima/ima_api.c
+++ b/security/integrity/ima/ima_api.c
@@ -311,7 +311,8 @@ void ima_store_measurement(struct ima_namespace *ns,
 			   struct file *file, const unsigned char *filename,
 			   struct evm_ima_xattr_data *xattr_value,
 			   int xattr_len, const struct modsig *modsig, int pcr,
-			   struct ima_template_desc *template_desc)
+			   struct ima_template_desc *template_desc,
+			   struct ns_status *status)
 {
 	static const char op[] = "add_template_measure";
 	static const char audit_cause[] = "ENOMEM";
@@ -325,6 +326,7 @@ void ima_store_measurement(struct ima_namespace *ns,
 					     .xattr_len = xattr_len,
 					     .modsig = modsig };
 	int violation = 0;
+	unsigned long flags = iint_flags(iint, status);
 
 	/*
 	 * We still need to store the measurement in the case of MODSIG because
@@ -344,7 +346,7 @@ void ima_store_measurement(struct ima_namespace *ns,
 
 	result = ima_store_template(ns, entry, violation, inode, filename, pcr);
 	if ((!result || result == -EEXIST) && !(file->f_flags & O_DIRECT)) {
-		iint->flags |= IMA_MEASURED;
+		set_iint_flags(iint, status, flags | IMA_MEASURED);
 		iint->measured_pcrs |= (0x1 << pcr);
 	}
 	if (result < 0)
diff --git a/security/integrity/ima/ima_main.c b/security/integrity/ima/ima_main.c
index 5d7d0e7081c0..aa0e153e0c53 100644
--- a/security/integrity/ima/ima_main.c
+++ b/security/integrity/ima/ima_main.c
@@ -391,7 +391,7 @@ static int __process_measurement(struct ima_namespace *ns,
 	if (action & IMA_MEASURE)
 		ima_store_measurement(ns, iint, file, pathname,
 				      xattr_value, xattr_len, modsig, pcr,
-				      template_desc);
+				      template_desc, status);
 	if (rc == 0 && (action & IMA_APPRAISE_SUBMASK)) {
 		rc = ima_check_blacklist(ns, iint, modsig, pcr);
 		if (rc != -EPERM) {
-- 
2.31.1

