From 4c38099ecea2a766570e3aa25dffef6a8233363c Mon Sep 17 00:00:00 2001
From: Stefan Berger <stefanb@linux.ibm.com>
Date: Mon, 31 Jan 2022 11:46:36 -0500
Subject: [PATCH 64/87] ima: Only emit error log messages for signed policy
 file for init_ima_ns

Only emite error log messages related to a signed policy file when
init_ima_ns is causing the error.

Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
---
 security/integrity/ima/ima_fs.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/security/integrity/ima/ima_fs.c b/security/integrity/ima/ima_fs.c
index 0b9c9aba2e08..19b5ae04196c 100644
--- a/security/integrity/ima/ima_fs.c
+++ b/security/integrity/ima/ima_fs.c
@@ -300,6 +300,7 @@ static const struct file_operations ima_ascii_measurements_ops = {
 
 static ssize_t ima_read_policy(struct user_namespace *user_ns, char *path)
 {
+	struct ima_namespace *ns = ima_ns_from_user_ns(user_ns);
 	void *data = NULL;
 	char *datap;
 	size_t size;
@@ -314,7 +315,8 @@ static ssize_t ima_read_policy(struct user_namespace *user_ns, char *path)
 	rc = kernel_read_file_from_path(path, 0, &data, INT_MAX, NULL,
 					READING_POLICY);
 	if (rc < 0) {
-		pr_err("Unable to open file: %s (%d)", path, rc);
+		if (ns == &init_ima_ns)
+			pr_err("Unable to open file: %s (%d)", path, rc);
 		return rc;
 	}
 	size = rc;
@@ -370,7 +372,8 @@ static ssize_t ima_write_policy(struct file *file, const char __user *buf,
 	if (data[0] == '/') {
 		result = ima_read_policy(user_ns, data);
 	} else if (ns->ima_appraise & IMA_APPRAISE_POLICY) {
-		pr_err("signed policy file (specified as an absolute pathname) required\n");
+		if (ns == &init_ima_ns)
+			pr_err("signed policy file (specified as an absolute pathname) required\n");
 		integrity_audit_msg(AUDIT_INTEGRITY_STATUS, NULL, NULL,
 				    "policy_update", "signed policy required",
 				    1, 0);
-- 
2.37.3

