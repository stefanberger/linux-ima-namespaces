From f9c2b69bff1e1e415e19b05c171d8b75e740a33a Mon Sep 17 00:00:00 2001
From: Stefan Berger <stefanb@linux.ibm.com>
Date: Fri, 13 May 2022 15:32:47 -0400
Subject: [PATCH 52/86] evm: Move hmac_tfm and evm_tfm into evm_namespace

Move hmac_tfm and evm_tfm into evm_namespace so that each EVM namespace
can have its own.

Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>
---
 include/linux/evm.h                 |  4 ++++
 security/integrity/evm/evm.h        |  4 ++++
 security/integrity/evm/evm_crypto.c | 25 +++++++++++++++++--------
 security/integrity/evm/evm_ns.c     |  1 +
 4 files changed, 26 insertions(+), 8 deletions(-)

diff --git a/include/linux/evm.h b/include/linux/evm.h
index dc1c64c5874a..2e9cacdeae93 100644
--- a/include/linux/evm.h
+++ b/include/linux/evm.h
@@ -12,6 +12,8 @@
 #include <linux/integrity.h>
 #include <linux/integrity_namespace.h>
 #include <linux/xattr.h>
+#include <crypto/hash.h>
+#include <crypto/hash_info.h>
 
 struct integrity_iint_cache;
 struct integrity_namespace;
@@ -34,6 +36,8 @@ struct evm_namespace {
 	int evm_hmac_attrs;
 
 	struct mutex mutex;
+	struct crypto_shash *hmac_tfm;
+	struct crypto_shash *evm_tfm[HASH_ALGO__LAST];
 };
 
 static inline struct evm_namespace *current_evm_ns(void)
diff --git a/security/integrity/evm/evm.h b/security/integrity/evm/evm.h
index 4b729ed783d5..bc13e2f3fcd0 100644
--- a/security/integrity/evm/evm.h
+++ b/security/integrity/evm/evm.h
@@ -75,4 +75,8 @@ static inline bool ns_is_active(struct evm_namespace *ns)
 	return (ns && test_bit(EVM_NS_ACTIVE, &ns->evm_ns_flags));
 }
 
+#ifdef CONFIG_IMA_NS
+void evm_ns_free_crypto(struct evm_namespace *ns);
+#endif
+
 #endif
diff --git a/security/integrity/evm/evm_crypto.c b/security/integrity/evm/evm_crypto.c
index a62863ce5b5a..092f05d65187 100644
--- a/security/integrity/evm/evm_crypto.c
+++ b/security/integrity/evm/evm_crypto.c
@@ -17,17 +17,27 @@
 #include <linux/xattr.h>
 #include <linux/evm.h>
 #include <keys/encrypted-type.h>
-#include <crypto/hash.h>
-#include <crypto/hash_info.h>
 #include "evm.h"
 
 #define EVMKEY "evm-key"
 
-static struct crypto_shash *hmac_tfm;
-static struct crypto_shash *evm_tfm[HASH_ALGO__LAST];
-
 static const char evm_hmac[] = "hmac(sha1)";
 
+#ifdef CONFIG_IMA_NS
+void evm_ns_free_crypto(struct evm_namespace *ns)
+{
+	size_t i;
+
+	if (ns->hmac_tfm)
+		crypto_free_shash(ns->hmac_tfm);
+
+	for (i = 0; i < ARRAY_SIZE(ns->evm_tfm); i++) {
+		if (ns->evm_tfm[i])
+			crypto_free_shash(ns->evm_tfm[i]);
+	}
+}
+#endif
+
 /**
  * evm_set_key() - set EVM HMAC key from the kernel
  * @ns: The EVM namespace to set the key on
@@ -76,13 +86,13 @@ static struct shash_desc *init_desc(struct evm_namespace *ns,
 			pr_err_once("HMAC key is not set\n");
 			return ERR_PTR(-ENOKEY);
 		}
-		tfm = &hmac_tfm;
+		tfm = &ns->hmac_tfm;
 		algo = evm_hmac;
 	} else {
 		if (hash_algo >= HASH_ALGO__LAST)
 			return ERR_PTR(-EINVAL);
 
-		tfm = &evm_tfm[hash_algo];
+		tfm = &ns->evm_tfm[hash_algo];
 		algo = hash_algo_name[hash_algo];
 	}
 
@@ -102,7 +112,6 @@ static struct shash_desc *init_desc(struct evm_namespace *ns,
 	if (type == EVM_XATTR_HMAC) {
 		rc = crypto_shash_setkey(tmp_tfm, ns->evmkey, ns->evmkey_len);
 		if (rc) {
-			crypto_free_shash(tmp_tfm);
 			mutex_unlock(&ns->mutex);
 			return ERR_PTR(rc);
 		}
diff --git a/security/integrity/evm/evm_ns.c b/security/integrity/evm/evm_ns.c
index 8891d3818097..c330174e9c27 100644
--- a/security/integrity/evm/evm_ns.c
+++ b/security/integrity/evm/evm_ns.c
@@ -35,6 +35,7 @@ void free_evm_ns(struct integrity_namespace *integrity_ns)
 {
 	struct evm_namespace *ns = integrity_ns->evm_ns;
 
+	evm_ns_free_crypto(ns);
 	kmem_cache_free(evmns_cachep, ns);
 }
 
-- 
2.37.3

